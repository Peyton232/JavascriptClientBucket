/**
 * TodoBudget
 * API for Todo Budget app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TodoBudget);
  }
}(this, function(expect, TodoBudget) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TodoBudget.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addAchievements', function() {
      it('should call addAchievements successfully', function(done) {
        //uncomment below and update the code to test addAchievements
        //instance.addAchievements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAlert', function() {
      it('should call addAlert successfully', function(done) {
        //uncomment below and update the code to test addAlert
        //instance.addAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBucket', function() {
      it('should call addBucket successfully', function(done) {
        //uncomment below and update the code to test addBucket
        //instance.addBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addUser', function() {
      it('should call addUser successfully', function(done) {
        //uncomment below and update the code to test addUser
        //instance.addUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deeleteTransaction', function() {
      it('should call deeleteTransaction successfully', function(done) {
        //uncomment below and update the code to test deeleteTransaction
        //instance.deeleteTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAchievement', function() {
      it('should call deleteAchievement successfully', function(done) {
        //uncomment below and update the code to test deleteAchievement
        //instance.deleteAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAlert', function() {
      it('should call deleteAlert successfully', function(done) {
        //uncomment below and update the code to test deleteAlert
        //instance.deleteAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucket', function() {
      it('should call deleteBucket successfully', function(done) {
        //uncomment below and update the code to test deleteBucket
        //instance.deleteBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUser', function() {
      it('should call deleteUser successfully', function(done) {
        //uncomment below and update the code to test deleteUser
        //instance.deleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findBucketByName', function() {
      it('should call findBucketByName successfully', function(done) {
        //uncomment below and update the code to test findBucketByName
        //instance.findBucketByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findBuckets', function() {
      it('should call findBuckets successfully', function(done) {
        //uncomment below and update the code to test findBuckets
        //instance.findBuckets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUserByID', function() {
      it('should call findUserByID successfully', function(done) {
        //uncomment below and update the code to test findUserByID
        //instance.findUserByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsers', function() {
      it('should call findUsers successfully', function(done) {
        //uncomment below and update the code to test findUsers
        //instance.findUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievement', function() {
      it('should call getAchievement successfully', function(done) {
        //uncomment below and update the code to test getAchievement
        //instance.getAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievements', function() {
      it('should call getAchievements successfully', function(done) {
        //uncomment below and update the code to test getAchievements
        //instance.getAchievements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlert', function() {
      it('should call getAlert successfully', function(done) {
        //uncomment below and update the code to test getAlert
        //instance.getAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlerts', function() {
      it('should call getAlerts successfully', function(done) {
        //uncomment below and update the code to test getAlerts
        //instance.getAlerts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransaction', function() {
      it('should call getTransaction successfully', function(done) {
        //uncomment below and update the code to test getTransaction
        //instance.getTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactions', function() {
      it('should call getTransactions successfully', function(done) {
        //uncomment below and update the code to test getTransactions
        //instance.getTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('insertTransaction', function() {
      it('should call insertTransaction successfully', function(done) {
        //uncomment below and update the code to test insertTransaction
        //instance.insertTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAchievements', function() {
      it('should call updateAchievements successfully', function(done) {
        //uncomment below and update the code to test updateAchievements
        //instance.updateAchievements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAlert', function() {
      it('should call updateAlert successfully', function(done) {
        //uncomment below and update the code to test updateAlert
        //instance.updateAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBucket', function() {
      it('should call updateBucket successfully', function(done) {
        //uncomment below and update the code to test updateBucket
        //instance.updateBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransaction', function() {
      it('should call updateTransaction successfully', function(done) {
        //uncomment below and update the code to test updateTransaction
        //instance.updateTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUser', function() {
      it('should call updateUser successfully', function(done) {
        //uncomment below and update the code to test updateUser
        //instance.updateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
