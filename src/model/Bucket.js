/**
 * TodoBudget
 * API for Todo Budget app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Transaction from './Transaction';

/**
 * The Bucket model module.
 * @module model/Bucket
 * @version 1.0.0
 */
class Bucket {
    /**
     * Constructs a new <code>Bucket</code>.
     * @alias module:model/Bucket
     * @param name {String} Name of the bucket
     * @param total {Number} total amount of this bucket
     * @param amount {Number} current amount in the bucket so far
     */
    constructor(name, total, amount) { 
        
        Bucket.initialize(this, name, total, amount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, total, amount) { 
        obj['name'] = name;
        obj['total'] = total;
        obj['amount'] = amount;
    }

    /**
     * Constructs a <code>Bucket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bucket} obj Optional instance to populate.
     * @return {module:model/Bucket} The populated <code>Bucket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bucket();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('history')) {
                obj['history'] = ApiClient.convertToType(data['history'], [Transaction]);
            }
            if (data.hasOwnProperty('overflowm')) {
                obj['overflowm'] = ApiClient.convertToType(data['overflowm'], 'Boolean');
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = ApiClient.convertToType(data['rule'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of the bucket
 * @member {String} name
 */
Bucket.prototype['name'] = undefined;

/**
 * total amount of this bucket
 * @member {Number} total
 */
Bucket.prototype['total'] = undefined;

/**
 * current amount in the bucket so far
 * @member {Number} amount
 */
Bucket.prototype['amount'] = undefined;

/**
 * @member {Array.<module:model/Transaction>} history
 */
Bucket.prototype['history'] = undefined;

/**
 * has this bucket overflown
 * @member {Boolean} overflowm
 */
Bucket.prototype['overflowm'] = undefined;

/**
 * literally magic
 * @member {String} rule
 */
Bucket.prototype['rule'] = undefined;






export default Bucket;

